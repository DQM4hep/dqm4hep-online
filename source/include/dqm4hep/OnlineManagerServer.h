/// \file OnlineManagerServer.h
/*
 *
 * OnlineManagerServer.h header template automatically generated by a class generator
 * Creation date : mer. juin 17 2015
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright 2018
 */


#ifndef DQM4HEP_ONLINEMANAGERSERVER_H
#define DQM4HEP_ONLINEMANAGERSERVER_H

// -- dqm4hep headers
#include <dqm4hep/Internal.h>
#include <dqm4hep/Server.h>
#include <dqm4hep/Service.h>
#include <dqm4hep/RequestHandler.h>

// -- std headers
#include <atomic>

namespace dqm4hep {

  namespace online {

    /**
     *  @brief  OnlineManagerServer class
     */
    class OnlineManagerServer {
    public:
      /**
       *  @brief  Constructor
       */
      OnlineManagerServer() = default;
      
      /**
       *  @brief  Run the server
       */
      void run();
      
      /**
       *  @brief  Stop the server
       */
      void stop();
      
    private:
      /**
       *  @brief  Collect a log message (server command)
       *  
       *  @param  buffer  the log message as json buffer
       */
      void collectLog(const net::Buffer &buffer);
      
      /**
       *  @brief  Collect an app stat (server command)
       *  
       *  @param  buffer  the app stat as json buffer
       */
      void collectAppStat(const net::Buffer &buffer);
      
    private:
      std::shared_ptr<net::Server>            m_server = {nullptr};           ///< The main server
      net::Service                           *m_logsService = {nullptr};      ///< The logs service
      net::Service                           *m_appStatsService = {nullptr};  ///< The application stats service
      std::atomic<bool>                       m_stopFlag = {false};           ///< The main loop stop flag
    };

  }

} 

#endif  //  DQM4HEP_ONLINEMANAGERSERVER_H
