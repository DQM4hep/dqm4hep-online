  /// \file OnlineElement.h
/*
 *
 * OnlineElement.h header template automatically generated by a class generator
 * Creation date : lun. avr. 30 2018
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright 
 */


#ifndef DQM4HEP_ONLINEELEMENT_H
#define DQM4HEP_ONLINEELEMENT_H

#include <dqm4hep/MonitorElement.h>

namespace dqm4hep {
  
  namespace online {
    
    class OnlineElement;
    typedef std::shared_ptr<OnlineElement> OnlineElementPtr;
    typedef std::vector<OnlineElementPtr> OnlineElementList;

    /** 
     *  @brief  OnlineElement class
     */ 
    class OnlineElement : public core::MonitorElement {
    public:
      /** 
       *  @brief  Make a shared pointer of OnlineElement
       */
      static OnlineElementPtr make_shared();

      /** 
       *  @brief  Make a shared pointer of OnlineElement
       *
       *  @param  pMonitorObject a valid ROOT object
       */
      static OnlineElementPtr make_shared(TObject *pMonitorObject);

      /** 
       *  @brief  Make a shared pointer of OnlineElement
       *
       *  @param  pMonitorObject a valid ROOT object
       *  @param  pReferenceObject a valid ROOT object as reference
       */
      static OnlineElementPtr make_shared(TObject *pMonitorObject, TObject *pReferenceObject);

      /** 
       *  @brief  Make a shared pointer of OnlineElement
       *
       *  @param  monitorObject a valid ROOT object pointer
       */
      static OnlineElementPtr make_shared(const core::PtrHandler<TObject> &monitorObject);

      /**
       *  @brief  Make a shared pointer of OnlineElement
       *
       *  @param  monitorObject a valid ROOT object pointer 
       *  @param  referenceObject a valid ROOT object pointer as reference
       */
      static OnlineElementPtr make_shared(const core::PtrHandler<TObject> &monitorObject,
                                                 const core::PtrHandler<TObject> &referenceObject);

      /**
       *  @brief  Destructor 
       */
      virtual ~OnlineElement() {}
     
   protected:
     OnlineElement();
     OnlineElement(TObject *pMonitorObject);
     OnlineElement(TObject *pMonitorObject, TObject *pReferenceObject);
     OnlineElement(const core::PtrHandler<TObject> &monitorObject);
     OnlineElement(const core::PtrHandler<TObject> &monitorObject, const core::PtrHandler<TObject> &referenceObject);

    private:
      int                           m_runNumber = {0};
      std::string                   m_collectorName = {""};
      std::string                   m_moduleName = {""};
      std::string                   m_title = {""};
      std::string                   m_description = {""};
    }; 

  }
  
} 

#endif  //  DQM4HEP_ONLINEELEMENT_H
