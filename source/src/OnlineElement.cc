  /// \file OnlineElement.cc
/*
 *
 * OnlineElement.cc source template automatically generated by a class generator
 * Creation date : lun. avr. 30 2018
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright 
 */


#include <dqm4hep/OnlineElement.h>

namespace dqm4hep {
  
  namespace online {

    OnlineElementPtr OnlineElement::make_shared() {
      return std::shared_ptr<OnlineElement>(new OnlineElement());
    }

    OnlineElementPtr OnlineElement::make_shared(TObject *pMonitorObject) {
      return std::shared_ptr<OnlineElement>(new OnlineElement(pMonitorObject));
    }

    OnlineElementPtr OnlineElement::make_shared(TObject *pMonitorObject, TObject *pReferenceObject) {
      return std::shared_ptr<OnlineElement>(new OnlineElement(pMonitorObject, pReferenceObject));
    }

    OnlineElementPtr OnlineElement::make_shared(const core::PtrHandler<TObject> &monitorObject) {
      return std::shared_ptr<OnlineElement>(new OnlineElement(monitorObject));
    }

    OnlineElementPtr OnlineElement::make_shared(const core::PtrHandler<TObject> &monitorObject,
                                   const core::PtrHandler<TObject> &referenceObject) {
      return std::shared_ptr<OnlineElement>(new OnlineElement(monitorObject, referenceObject));
    }
    
    OnlineElement::OnlineElement() :
      core::MonitorElement() {
      /* nop */
    }
    
    OnlineElement::OnlineElement(TObject *pMonitorObject) :
      core::MonitorElement(pMonitorObject) {
      /* nop */
    }
    
    OnlineElement::OnlineElement(TObject *pMonitorObject, TObject *pReferenceObject) :
      core::MonitorElement(pMonitorObject, pReferenceObject) {
      /* nop */
    }
    
    OnlineElement::OnlineElement(const core::PtrHandler<TObject> &monitorObject) :
      core::MonitorElement(monitorObject) {
      /* nop */
    }
    
    OnlineElement::OnlineElement(const core::PtrHandler<TObject> &monitorObject, const core::PtrHandler<TObject> &referenceObject) :
      core::MonitorElement(monitorObject, referenceObject) {
      /* nop */
    }
    
    

  }

} 

